---
- hosts: all
  remote_user: ubuntu
  tasks:
    - name: Check mandatory variables are defined
      assert:
        that:
          - src_root_dir is defined
          - dest_root_dir is defined
          - src_nginx_conf_path is defined
          - docker_hub_username is defined
          - docker_hub_password is defined
          - secret_key is defined
          - mysql_root_password is defined
          - backend_image_version is defined
          - dest_ssl_privkey_path is defined
          - dest_ssl_fullchain_path is defined
          - admin_username is defined
          - admin_email is defined
          - admin_password is defined

    - name: Copy compose file
      copy:
        src: '{{ src_root_dir | mandatory }}/docker-compose.yml'
        dest: '{{ dest_root_dir | mandatory }}'

    - name: 'Copy ssl private key (TODO: must be changed)'
      copy:
        src: '{{ src_root_dir | mandatory }}/dev-certs/selfsigned.key'
        dest: '{{ dest_ssl_privkey_path | mandatory }}'

    - name: 'Copy ssl fullchain (TODO: must be changed)'
      copy:
        src: '{{ src_root_dir | mandatory }}/dev-certs/selfsigned.crt'
        dest: '{{ dest_ssl_fullchain_path | mandatory }}'

    - name: 'Copy nginx config'
      copy:
        src: '{{ src_nginx_conf_path }}'
        dest: '{{ dest_root_dir }}'

    - name: 'Create build directories as a hack to make docker-compose work!'
      file:
        path: '{{ dest_root_dir }}/{{ item }}/'
        state: directory
      loop:
        - backend

    - name: 'Login to Docker Hub registry (To extend pull rate limit)'
      community.general.docker_login:
        username: '{{ docker_hub_username | mandatory }}'
        password: '{{ docker_hub_password | mandatory }}'

    - name: 'Create .env'
      template:
        src: '{{ src_root_dir }}/deploy/templates/.env.j2'
        dest: '{{ dest_root_dir }}/.env'

    - name: 'Pull images'
      shell: 'cd {{ dest_root_dir }} && docker-compose pull'
      # The builtin docker_compose module sometimes hangs on pulling!

    - name: 'Stop containers'
      docker_compose:
        project_src: '{{ dest_root_dir }}'
        build: no
        pull: no
        state: absent

    - name: 'Start containers'
      docker_compose:
        project_src: '{{ dest_root_dir }}'
        build: no
        pull: no
        state: present
